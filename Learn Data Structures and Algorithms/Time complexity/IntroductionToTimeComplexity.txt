Time complexity - method for figuring out how fast or slow an algorithm is.
Measure how long an algorithm takes to run as the amount of input data increases.

There are multiple ways to measure time complexity of an algorithm:
-Best case
-Average case
-Worst case

Why is Time Complexity important?
Time complexity of an algorithm is independent from the machine the algorithm is going to run on.
Understanding time complexity is important because it gives us a way of comparing algorithms
without worrying about the system on which the algorithms are going to run.

How do we denote the worst case time complexity of an algorithm?
Big O notation - It is defined as upper bound
Upper bound on an algorithm is the most amount of time required giving the worst case time complexity.

